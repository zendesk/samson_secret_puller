#!/usr/bin/env ruby
# frozen_string_literal: true

STDOUT.sync = true

# json logging so it can be indexed
require 'logger'
require 'json'
logger = Logger.new($stdout, level: ENV.fetch('LOG_LEVEL', 'info').to_sym)
logger.formatter = ->(level, _, _, m) do
  m = {message: m.message, backtrace: m.backtrace.first(5).join("\n")} if m.is_a?(Exception)
  m = {message: m} unless m.is_a?(Hash)
  {severity: level}.merge(m).to_json << "\n"
end

at_exit do
  logger.error($!) if $! # && $!.message != "SIGTERM" && !$stdout.tty?
end

require_relative "../lib/secrets"

mounted_dir = "/vault-auth"
true_env = ['1', 'true']

vault_address_file = "#{mounted_dir}/address"
vault_address =
  if File.exist?(vault_address_file)
    File.read(vault_address_file).strip
  else
    ENV.fetch("VAULT_ADDR")
  end

vault_kv_version_file = "#{mounted_dir}/kv_version"
vault_v2 =
  if File.exist?(vault_kv_version_file)
    File.read(vault_kv_version_file).strip == "2"
  else
    true_env.include?(ENV["VAULT_KV_V2"])
  end

logger.debug message: "Connecting to vault", address: vault_address, v2: vault_v2
client = SecretsClient.new(
  vault_address: vault_address,
  vault_mount: ENV["VAULT_MOUNT"] || "secret",
  vault_prefix: ENV["VAULT_PREFIX"] || "apps",
  vault_auth_type: ENV['VAULT_AUTH_TYPE'] || 'token',
  vault_auth_path: ENV['VAULT_AUTH_PATH'],
  vault_auth_role: ENV['VAULT_AUTH_ROLE'],
  vault_authfile_path: ENV["VAULT_AUTH_FILE"] || "#{mounted_dir}/authsecret",
  ssl_verify: !ENV.key?("VAULT_TLS_VERIFY") || true_env.include?(ENV["VAULT_TLS_VERIFY"]),
  annotations: ENV["SECRET_ANNOTATIONS"] || '/secretkeys/annotations',
  serviceaccount_dir: ENV["SERVICEACCOUNT_DIR"] || '/var/run/secrets/kubernetes.io/serviceaccount/',
  output_path: ENV["SIDECAR_SECRET_PATH"] || '/secrets',
  api_url: (ENV["TESTING"] ? 'http://' : 'https://') + ENV.fetch("KUBERNETES_PORT_443_TCP_ADDR"),
  pod_ip: ENV["POD_IP"],
  pod_hostname: ENV["POD_HOSTNAME"],
  vault_v2: vault_v2,
  logger: logger
)
logger.debug message: "WRITE"
client.write_secrets
client.write_pki_certs
logger.info message: "secrets: DONE"
